package hello2

// MakeMessage は、本来は 非公開スコープ として定義している hello2.makeMessage 関数を
// テストするために、用意しているフィールドである。
//
// 外部テストパッケージ (external test package) を利用したテストの場合
// 処理本体が存在しているパッケージとは異なるパッケージにテストを定義するため
// スコープがpublicではない関数などが見えなくなってしまう。
//
// 外部利用される観点からのテストではそれで良いのであるが、時にはテストのために
// 非公開となっている内部の情報を操作してテストすることも必要となる場合がある。
//
// そのような場合、Goではテスト時のみ発動する裏口(Backdoor)を用意してテストを実行するやり方がある。
// 以下のトリックとなる。
//
//   - 非公開となっている状態や操作をテスト時のみ利用できるようにする関数や変数を定義する
//     - 慣習として、このファイルは export_test.go と命名される
//   - export_test.go が所属するパッケージは xxx_test パッケージではなく通常の xxx パッケージとする
//     - これにより、この export_test.go 内では非公開の定義にアクセスすることができる
//   - export_test.go にはテストメソッドを作らない。あくまで裏口となる変数や関数を定義するのみ。
// 
// go test 時、元のパッケージに所属しているテストと外部テストパッケージに所属しているテストがコンパイル対象となるため
// テスト時のみ export_test.go に定義した裏口が有効となるというトリック。
//
// このトリックは、Go本体の標準ライブラリ内でもあちこちで利用されている。
// 例： https://golang.org/src/fmt/
// 例： https://golang.org/src/strings/
//
// 上記の例のどちらも、本来のパッケージの所属しているテストは export_test.go だけとなっている。
// それ以外のテストは、全て外部テストパッケージとなっている。
var MakeMessage = makeMessage